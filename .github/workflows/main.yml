name: Deploy App Cobranzas.

# Trigger.
on:
  push:
    branches:
      - cobranzas_qa_am

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Variables de entorno.
    env:
      SSH_PRIVATE_KEY: ${{ secrets.PEM_COBRANZAS_QA }}
      REMOTE_USER: ec2-user
      REMOTE_HOST: ${{ secrets.IP_COBRANZAS_QA }}
      GITHUB_TOKEN: ${{ secrets.TOKEN_GH_AM }}
      APP_NAME: app.js
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME_COBRANZAS_QA }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN_COBRANZAS_QA }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install packages Nodejs Npm Git
      - name: Install Packages
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            sudo yum update -y
            sudo yum install nodejs npm git -y

      # Create a Directory.
      - name: Create a Directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            sudo rm -rf /opt/cobranzas_qa || true
            cd /opt
            sudo mkdir -p cobranzas_qa

      # Execute git clone.
      - name: Clone repository
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/cobranzas_qa
            sudo git clone -b cobranzas_qa_am https://github.com/alkemyTech/UMSA-DevOps-T1.git /opt/cobranzas_qa

      # Install npm packages express pm2.
      - name: Install npm packages
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/cobranzas_qa
            sudo npm install -g express pm2

      # Start service
      - name: Start Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/cobranzas_qa
            sudo pm2 delete app.js || true
            sudo pm2 start app.js --name 'app.js'

      # Check if app is running
      - name: Check if app is running
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            # if sudo pm2 status | grep -q  '${{ env.APP_NAME }}'; then --> otra opción
            if sudo pm2 ls | grep -q  '${{ env.APP_NAME }}'; then
              echo "El servicio ${{ env.APP_NAME }} está en ejecución."
            else
              echo "El servicio ${{ env.APP_NAME }} no está en ejecución."
              exit 1
            fi

      # Install Docker
      - name: Install Docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            sudo yum update -y
            sudo yum install docker -y
            sudo systemctl start docker
            sudo systemctl enable docker

            sudo usermod -aG docker $USER
            sudo usermod -aG docker ec2-user

      # Build Docker image
      - name: Build Docker Image
        run: |
          ssh -i ${{ env.SSH_PRIVATE_KEY }} ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }} 'docker build -t ${{ env.DOCKERHUB_USERNAME }}/cobranzas_qa:latest /opt/cobranzas_qa'

      # Login to Docker Hub and push image
      - name: Push Docker Image to Docker Hub
        run: |
          ssh -i ${{ env.SSH_PRIVATE_KEY }} ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }} 'docker login -u ${{ env.DOCKERHUB_USERNAME }} -p ${{ env.DOCKERHUB_TOKEN }} && docker push ${{ env.DOCKERHUB_USERNAME }}/cobranzas_qa:latest'

      # Deploy Docker Image to QA Environment
      - name: Deploy Docker Image to QA Environment
        run: |
          ssh -i ${{ env.SSH_PRIVATE_KEY }} ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }} 'docker pull ${{ env.DOCKERHUB_USERNAME }}/cobranzas_qa:latest && docker stop cobranzas_qa || true && docker rm cobranzas_qa || true && docker run -d --name cobranzas_qa -p 8080:8080 ${{ env.DOCKERHUB_USERNAME }}/cobranzas_qa:latest'
