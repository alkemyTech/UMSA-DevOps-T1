name: cobranzas_qa_manual.

# Configure 
on:
  push:
    branches:
      - cobranzas_qa_am

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      #Conexion ssh
      SSH_PRIVATE_KEY: ${{ secrets.PEM_COBRANZAS_QA }}
      REMOTE_USER: ec2-user
      REMOTE_HOST: ${{ vars.IP_COBRANZAS_QA }}
      #Conexion dockerhub
      DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME_AM }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD_AM }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN_AM }}

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: eliminar carpeta en caso de existir
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: sudo rm -rf /opt/cobranzas || true

    - name: Crear la carpeta /opt/cobranzas
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          sudo mkdir -p /opt/cobranzas

    - name: Actualizar paquetes
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          sudo yum update

    - name: Instalar Node.js, npm y Git
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          sudo yum update
          sudo yum install -y nodejs npm git

    - name: Clonar repositorio
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          sudo git clone -b cobranzas_qa_am https://github.com/alkemyTech/UMSA-DevOps-T1.git /opt/cobranzas


    - name: Instalar express
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          cd /opt/cobranzas
          sudo npm install express --save

    - name: Instalar pm2
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          cd /opt/cobranzas
          sudo npm install -g pm2

    - name: Detener servicio Node con PM2 si est치 en ejecuci칩n
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.REMOTE_HOST }}
        username: ${{ env.REMOTE_USER }}
        key: ${{ env.SSH_PRIVATE_KEY }}
        script: |
          cd /opt/cobranzas
          sudo pm2 stop app.js || true  


    - name: Iniciar servicio Node con PM2
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          cd /opt/cobranzas
          sudo pm2 start app.js
    
    - name: Chequear si la aplicaci칩n est치 corriendo
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          sudo pm2 status myapp

    - name: MOstrar informacion de la pagina
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          sudo curl localhost:3000

    - name: Generar Imagen Docker
      uses: docker/build-push-action@v5.3.0
      with:
        context: .
        file: Dockerfile
        push: false
        tags: ${{ env.DOCKERHUB_USERNAME }}/cobranzas_qa:latest

    - name: Iniciar sesion en docker hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_PASSWORD }}

    - name: Subir a DockerHub
      uses: docker/build-push-action@v5.3.0
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ env.DOCKERHUB_USERNAME }}/cobranzas_qa:latest
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}
