name: Deploy--App Node.js to EC2 

# Trigger
on:
  push:
    branches:
      - santiagocenturion_pagos

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Variables de entorno
    env:
      SSH_PRIVATE_KEY: ${{ secrets.PEM_FILE_PAGOS }}
      REMOTE_USER: ec2-user
      REMOTE_HOST: ${{ secrets.DIRECTION_IP_AWS_PAGOS }}
      GITHUB_TOKEN: ${{ secrets.TOKEN_PAGOS }}
      APP_NAME: app.js

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install packages Nodejs Npm Git
      - name: Install Packages
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            sudo yum update -y
            sudo yum install nodejs npm git -y
           
     
      # Create a Directory
      - name: Create a Directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            sudo rm -rf /opt/pagos || true
            cd /opt
            sudo mkdir -p pagos

      # Execute git clone
      - name: Clone repository
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/pagos
            sudo git clone https://${{ secrets.MS_PAGOS_DEV }}@github.com/santicenturion/UMSA-DevOps-T1

      # Install npm packages express pm2
      - name: Install npm packages
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/pagos
            sudo npm install -g express pm2

      # Start service
      - name: Start Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/pagos
            sudo pm2 delete app.js || true
            sudo pm2 start app.js --name 'app.js'

      # Check if app is running
      - name: Check if app is running
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            # if sudo pm2 status | grep -q  '${{ env.APP_NAME }}'; then --> otra opción
            if sudo pm2 ls | grep -q  '${{ env.APP_NAME }}'; then 
            echo "El servicio ${{ env.APP_NAME }} está en ejecución."
            else
            echo "El servicio ${{ env.APP_NAME }} no está en ejecución."
            exit 1
            fi