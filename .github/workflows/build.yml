name: proyecto final

on:
  push:
    branches:
      - compras_qa_il

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SSH_PRIVATE_KEY: ${{ secrets.PEM_FILE_COMPRAS }}
      REMOTE_USER: ec2-user
      REMOTE_HOST: ${{ vars.AWS_DEV_HOST_COMPRAS_QA }}
      DOCKERHUB_USERNAME: ${{vars.DOCKERHUB_USERNAME}}
      DOCKERHUB_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: eliminar carpeta en caso de existir
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: sudo rm -rf /opt/compras || true

    - name: Crear la carpeta /opt/compras
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          sudo mkdir -p /opt/compras

    - name: Actualizar paquetes
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          sudo yum update

    - name: Instalar Node.js, npm y Git
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          sudo yum update
          sudo yum install -y nodejs npm git

    - name: Clonar repositorio
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          sudo git clone -b compras https://github.com/alkemyTech/UMSA-Softtek-DevOps-Base.git /opt/compras


    - name: Instalar express
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          cd /opt/compras
          sudo npm install express --save

    - name: Instalar pm2
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          cd /opt/compras
          sudo npm install -g pm2

    - name: Detener servicio Node con PM2 si est치 en ejecuci칩n
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.REMOTE_HOST }}
        username: ${{ env.REMOTE_USER }}
        key: ${{ env.SSH_PRIVATE_KEY }}
        script: |
          cd /opt/compras
          sudo pm2 stop app.js || true  


    - name: Iniciar servicio Node con PM2
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          cd /opt/compras
          sudo pm2 start app.js
    
    - name: Chequear si la aplicaci칩n est치 corriendo
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          sudo pm2 status myapp

    - name: MOstrar informacion de la pagina
      uses: appleboy/ssh-action@master
      with:
         host: ${{env.REMOTE_HOST}}
         username: ${{env.REMOTE_USER}}
         key: ${{env.SSH_PRIVATE_KEY }}
         script: |
          sudo curl localhost:3000

    - name: Generar Imagen Docker
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        push: false
        tags: lealivan009/compras_qa:latest

    - name: Subir a DockerHub
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        push: true
        tags: your-dockerhub-username/your-image-name:latest
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
